# JAVA_STUDY(9.27 수)

# ERD(Entity  Relationship Diagram)

Entity(디비에 테이블 개념)  → ER다이어그램 또는 ERD 라고 부름

# 개념

Entity: 존재하고 있는 것을 의미 .DB에서는 Table을 의미함.

Relationship: 관계를 의미하는 용어 . 데이터베이스에서는 테이블 간의 관계를 표기

DB 개발에서 보다 많은 아이디어를 도출라고, 설계에 대한 이해도를 높이기 위해서 사용함

쿼리문 작성에 도움을 받을 수 있음.

데이터의 다양한 특징을 확인 할 수 있기 때문에 요구사항에 맞게 개발이 가능함.

# Entity(개체)

-Entity는 관리하고자 하는 정보의 실체이고, 사람, 객체 혹은 개념을 의미함.

데이터베이스를 설계 할떄 쉽게 테이블을 Entity라고 이해하면 됨

모든Entity는 하나 이상의 식별자(UID) 를 지녀야 하며, UID가 없다면 Entity라고  할 수 없다. (UID ⇒ Primary key)

-Week Entity : 개체가 가진 속성들로는 개체를 고유하게 정의 할 수 없는 개체를 의미함. 

하나의 개체는 클래스와 비슷한 동작을 함 

(DAO VO도 비슷한 동작)

# Attrivutr(속성)

-Attribute는 Entity를 구성하고 있는 요소 →컬럼과 비슷

데이터 타입을 반드시 같이 명시해 줘야 합니다.

-Key Attribute

>다른 객체들과 중복되지 않는 고유한 값을 가진 Attribute로 객체를 식별하는데 사용된다.

-Composite Attribute

>독립적인 Attribute들이 모여서 생성된 Attribute를 의미함.

>예로 xx시, xx동, xx아파트 등의 독립적인 Attribute들이 모여서 생성된 주소 Attribute는 복합 Attribute라고 할 수 있습니다.

-Multi_valued Attribute

>하나의 Attribute가 여러개의 값을 가지는 Attribute를 의미함 →카테고리값

>예로 하나의 영상물에 로맨스,sf,호러 등의 여러 장르가 공통적으로 존재하는 것 같은 속성

(하위 카테고리를 가지고 있는것 / 클래스로는 인터페이스를 가지고 있는 것 이라고 생각하면됨)

-Derived Attibute

>다른 Attibute가 갖고 있는 값으로 부터 유도된 속성을 의미함 

>월급이라는 속성이 있다면, 이를 이용하여 연봉을 알아오게 되는데 이 연봉 값을  Derived Attibute라고합니다.

# Relationship

-Entity간의 관계를 의미하고, 두 Entity간의 선을 긋고, 관계 명칭을 기록 

-선택 사항을 표기 

    >점선인 선택적인 사항의 의미(점선으로 관계를 표기한 경우)

 →예로 ,사원과 부서 Entity가 있을 때, 부서 입장에서 사원을 배치 받을 수도 있고, 받지 않을 수도 있다.

>실선인 선택적인 사항의 의미(실선으로 관계를 표기한 경우)

 →예로, 사원 입장에서 부서는 필수적으로 배정을 받아야 한다. (foreign key)

관계의 형태를 표기


관계의 형태를 표기

>삼지창 모양(새다리)은 하나 이상의 의미 

>단선은 하나의 의미

> Primary key 는 P로 표시

>foreign key(참조가능) 는 F로 표시 

포함 되는 쪽에서 foreign key 설정을 함. (1대 다 관계라면 다쪽에서 설정)

  -자료를 불러오는 경우foregin key 설정을 함

→relationship

삼지창 ⇒ DEPT 개체들은 EMP의 여러 개체를 가질 수 있음.

EMP , DEPT → Entity

EMPNO , ENAME, JOB, DEPTNO,LOC →Attribute

# 관계의 형태(Cardinality)

Entity가 가지는 관계의 여러가지 형태

1:1 관계  :  양쪽 모두 단 하나씩 존재하는 경우  

- ex) 상점의 주소는 단 하나만 존재함.
- 서로에게 foreign key관계이면서도 Primary key 관계이다.

1:N관계  : 일 대 다 / 다 대 일 관계는 하나의 원소가 두 개 이상의 원소와 관계를 맺는 것을 의미함. 

- ex)  한 부서에서 여러명의 사원이 소속되어 있는 관계를 표기하는 것과 같습니다.
- 다수에 속한 개체에 단일 개체의 Primary key를 Attirbute로 추가한다는 개념

(ex) 강의장 안에서 나는 고유하지만 강의장 입장에서 고유한 값이 아님) (일은 고유값이지만 다는 고유값이 아닌경우)

M:N 관계 : 다 대 다 관계라고 하며, 양쪽 모두 하나 이상과 연관 될 수 있는 관계를 의미

- ex) 하나의 수업에 여러 학생이 있을 수 있음. 한 명의 학생은 여러 수업을 들을 수 있는 관계
- 이런 다대다 관계를 다대일 관계로 분할하고, 관계를 맞은 두 Entity의 기본기를 가져와서 하나의Relation을 생성

      수강신청이라는 테이블을 하나 더 만들어서 학생은 자신이 수강신청하는 수업에만 관계를 맺고 있으면 됩니다.

   ⇒ (다 대다 관리는 하기 힘들기 때문에 다대일 관계로 분할 후 관리하는 법)

      primary key로 연결 되진 않지만 foreign key관계

스키마 개념도(개념 스키마)


오라클  파일 → 데이터 모델러 → 임포트→ 데이터 익션너리

MySQL 워크벤치 - 데이타 베이스 - 리버스 엔지니어

[draw.io] → 개념스키마 그릴 수 있는 사이트